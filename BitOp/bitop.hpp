/**
 * @brief 基本となるビット演算メモ
 * @date  作成日     : 2016/01/30
 * @date  最終更新日 : 2016/01/30
 */



//****************************************
// インクルードガード
//****************************************

#ifndef __BITOP_H__
#define __BITOP_H__



//****************************************
// 必要なヘッダファイルのインクルード
//****************************************

#include <cstdint>



//****************************************
// 関数の定義
//****************************************

/**
 * @brief  符号なし整数vの先頭から続くゼロの数を数える
 * @note   IEEE 754形式をサポートしているアーキテクチャにのみ対応
 * @note   エンディアンはリトル、ビッグどちらにも対応
 * @param  std::uint32_t v 符号なし整数v
 * @return vのゼロの数
 */
std::int32_t nlz(std::uint32_t v)
{
    union { std::uint64_t asu64; double asf64;} u;  // 無名共用体を準備
    u.asf64 = (double)v + 0.5;                      // 0は例外表現なので0.5(1.0 * 2^(-1))を加算しておく
    return 1054 - (u.asu64 >> 52);                  // 1054(ゲタ(bias)の数+32-1) - vの指数部を返す
}



#endif  // end of __BITOP_H__

